<?php
/**
 * Copyright Â© 2018 Dawid Grzywa (dawid.grzywa@gmail.com)
 */

namespace AppBundle\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;
use function Doctrine\ORM\QueryBuilder;

/**
 * CarrierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarrierRepository extends EntityRepository
{
    public function searchByFormData($data)
    {
        $query = $this->createQueryBuilder('c')
            ->leftJoin('c.cars', 'car')
            ->leftJoin('c.relations', 'r')
            ->leftJoin('r.destinations', 'd')
            ->leftJoin('r.fromLocations', 'fromLocations')
            ->leftJoin('car.equipments', 'e')
            ->leftJoin('c.tags', 'ct');

        if ($data['base'] !== null) {
            $query
                ->andWhere('c.base LIKE :base')
                ->setParameter('base', $data['base'] . '%');
        }

        /** @var ArrayCollection $fromLocations */
        $fromLocations = $data['fromLocations'];
        if ($fromLocations->count()) {
            $criteria = Criteria::create();
            foreach ($fromLocations as $fromLocation) {
                $criteria->orWhere(
                    $criteria::expr()->orX(
                        $criteria::expr()->contains('fromLocations.code', $fromLocation->getCode())
                    ));
            }
            $query->andWhere()->addCriteria($criteria);
        }

        /** @var ArrayCollection $destinations */
        $destinations = $data['destinations'];
        if ($destinations->count()) {
            $criteria = Criteria::create();
            foreach ($destinations as $destination) {
                $criteria->orWhere(
                    $criteria::expr()->orX(
                        $criteria::expr()->contains('d.code', $destination->getCode())
                ));
            }
            $query->andWhere()->addCriteria($criteria);
        }

        if ($data['type']) {
            $query
                ->andWhere('car.type = :type')
                ->setParameter('type', $data['type']);
        }

        if ($data['build']) {
            $query
                ->andWhere('car.build = :build')
                ->setParameter('build', $data['build']);
        }

        /**
         * @var $equipments ArrayCollection
         */
        $equipments = $data['equipments'];
        if ($equipments->count()) {
            $query
                ->andWhere('e.id IN (:equipments)')
                ->setParameter('equipments', $data['equipments']);
        }

        if ($data['paletteCapacityFrom']) {
            $query
                ->andWhere('car.paletteCapacity >= :paletteCapacityFrom')
                ->setParameter('paletteCapacityFrom', $data['paletteCapacityFrom']);
        }

        if ($data['paletteCapacityTo']) {
            $query
                ->andWhere('car.paletteCapacity <= :paletteCapacityTo')
                ->setParameter('paletteCapacityTo', $data['paletteCapacityTo']);
        }

        if ($data['quantity']) {
            $query
                ->andWhere('car.quantity >= :quantity')
                ->setParameter('quantity', $data['quantity']);
        }

        /**
         * @var $tags ArrayCollection
         */
        if ($data['tags']) {
            $query
                ->andWhere('ct.id IN (:tags)')
                ->setParameter('tags', $data['tags']);
        }

        return $query->getQuery()->getResult();
    }
}
